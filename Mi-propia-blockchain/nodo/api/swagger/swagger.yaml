---
swagger: "2.0"
info:
  version: "0.0.1"
  title: "Nodo API"
host: "127.0.0.1:10010"
basePath: "/"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /transaccion:
    x-swagger-router-controller: Default
    post:
      description: "Envia una nueva transacci√≥n al nodo"
      operationId: "enviarNuevaTransaccion"
      parameters:
      - in: "body"
        name: "transaccion"
        description: "La transaccion"
        required: true
        schema:
          $ref: "#/definitions/Transaccion"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/TransaccionResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /minado:
    x-swagger-router-controller: Default
    post:
      description: "Comienza la busqueda del nonce para solucionar la prueba de trabajo"
      operationId: "comenzarMinado"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/MinadoResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /cadena:
    x-swagger-router-controller: Default
    get:
      description: "Devuelve la cadena de bloques del nodo"
      operationId: "obtenerCadena"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CadenaResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: "swagger_raw"
definitions:
  Transaccion:
    required:
    - "cantidad"
    - "emisor"
    - "receptor"
    properties:
      emisor:
        type: "string"
      receptor:
        type: "string"
      cantidad:
        type: "number"
    example:
      receptor: "b"
      cantidad: 10
      emisor: "a"
  Bloque:
    required:
    - "dificultad"
    - "hashBloquePrevio"
    - "nonce"
    - "timestamp"
    - "altura"
    - "transacciones"
    properties:
      hashBloquePrevio:
        type: "string"
      timestamp:
        type: "string"
      dificultad:
        type: "number"
      nonce:
        type: "string"
      altura:
        type: "number"
      transacciones:
        type: "array"
        items:
          $ref: "#/definitions/Transaccion"
    example:
      transacciones:
      - receptor: "b"
        cantidad: 10
        emisor: "a"
      - receptor: "b"
        cantidad: 10
        emisor: "a"
      hashBloquePrevio: "lfk98faslkf98fas"
      nonce: "nonce"
      dificultad: 4
      timestamp: "2019-01-02T09:39:30.694Z"
  Cadena:
    type: "array"
    items:
      $ref: "#/definitions/Bloque"
    example:
      cadena:
      - transacciones:
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        hashBloquePrevio: "lfk98faslkf98fas"
        nonce: "nonce"
        dificultad: 4
        timestamp: "2019-01-02T09:39:30.694Z"
      - transacciones:
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        hashBloquePrevio: "lfk98faslkf98fas"
        nonce: "nonce"
        dificultad: 4
        timestamp: "2019-01-02T09:39:30.694Z"
  TransaccionResponse:
    required:
    - "message"
    properties:
      message:
        type: "string"
    example:
      message: "message"
  MinadoResponse:
    required:
    - "bloque"
    - "message"
    properties:
      message:
        type: "string"
      bloque:
        $ref: "#/definitions/Bloque"
    example:
      altura: 1
      message: "message"
      bloque:
        transacciones:
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        - receptor: "b"
          cantidad: 10
          emisor: "a"
        hashBloquePrevio: "lfk98faslkf98fas"
        nonce: "nonce"
        dificultad: 4
        timestamp: "2019-01-02T09:39:30.694Z"
  CadenaResponse:
    required:
    - "cadena"
    - "message"
    properties:
      message:
        type: "string"
      cadena:
        $ref: "#/definitions/Cadena"
    example:
      cadena:
        cadena:
        - transacciones:
          - receptor: "b"
            cantidad: 10
            emisor: "a"
          - receptor: "b"
            cantidad: 10
            emisor: "a"
          hashBloquePrevio: "lfk98faslkf98fas"
          nonce: "nonce"
          dificultad: 4
          timestamp: "2019-01-02T09:39:30.694Z"
        - transacciones:
          - receptor: "b"
            cantidad: 10
            emisor: "a"
          - receptor: "b"
            cantidad: 10
            emisor: "a"
          hashBloquePrevio: "lfk98faslkf98fas"
          nonce: "nonce"
          dificultad: 4
          timestamp: "2019-01-02T09:39:30.694Z"
      message: "message"
  ErrorResponse:
    required:
    - "message"
    properties:
      message:
        type: "string"
